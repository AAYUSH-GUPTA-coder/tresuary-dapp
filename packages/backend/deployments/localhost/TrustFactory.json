{
  "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustFactoryOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ONLY_ONWER_CAN_CALL_FUNCTION",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TRANSFER_FAILED",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allTrustContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "trustIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gigCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trustContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "platformAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gigCount",
          "type": "uint256"
        }
      ],
      "name": "createTrustContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddressOfContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddressOfTrustFactoryOnwer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOfTrustContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "searchByAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdf8ed28b8b8be3b9c3af2365b7ed5cca1db22f245db8451e8cd0ec91f6fdcd48",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
    "transactionIndex": 0,
    "gasUsed": "1597586",
    "logsBloom": "0x
    "blockHash": "0x4be3a99e5c5921a798184eaa988ab51a2782f670f53194a6f229d5cbff1f68c5",
    "transactionHash": "0xdf8ed28b8b8be3b9c3af2365b7ed5cca1db22f245db8451e8cd0ec91f6fdcd48",
    "logs": [],
    "blockNumber": 30,
    "cumulativeGasUsed": "1597586",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "ffc9dbc201fa26f6d41bfa5965317302",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustFactoryOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ONLY_ONWER_CAN_CALL_FUNCTION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TRANSFER_FAILED\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allTrustContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"trustIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gigCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trustContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"platformAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gigCount\",\"type\":\"uint256\"}],\"name\":\"createTrustContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressOfContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressOfTrustFactoryOnwer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOfTrustContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"searchByAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustFactory.sol\":\"TrustFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Trust.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\nerror SEND_MORE_FUNDS();\\nerror TRANSFER_FAILED();\\nerror ONLY_ONWER_CAN_CALL_FUNCTION();\\nerror JOB_NOT_DONE();\\nerror JOB_DONE();\\nerror STILL_HAVE_TIME();\\n\\ncontract Trust {\\n    // address of owner\\n    address public immutable owner;\\n\\n    // percentage of profit he/she is willing to give\\n    uint256 public immutable percentage;\\n\\n    // number of gigs owner will give commionsion/cut to bielevers\\n    uint256 public immutable gigCount;\\n\\n    // Arrays of supporters/Believers\\n    address[] public believers;\\n\\n    // count of projects done\\n    uint256 public projectCount;\\n\\n    // address of the trustFactory contract\\n    address payable public platformAddress;\\n\\n    // contract creation time\\n    uint256 public contractCreationTime;\\n\\n    constructor(\\n        uint256 _percentage,\\n        address _owner,\\n        uint256 _gigCount,\\n        address _platformAddress\\n    ) {\\n        // Store the address of the deployer as a payable address.\\n        // When we withdraw funds, we'll withdraw here.\\n        owner = payable(_owner);\\n        percentage = _percentage;\\n        gigCount = _gigCount;\\n        platformAddress = payable(_platformAddress);\\n\\n        contractCreationTime = block.timestamp;\\n    }\\n\\n    // adding senior / Believer to the believers array\\n    function AddBeliever() public payable {\\n        if (msg.value < 1e17) {\\n            // 1,00,000,000,000,000,000 = 1e17 = 1 * 10 * 17 = 0.1 Eth\\n            revert SEND_MORE_FUNDS();\\n        }\\n        believers.push(msg.sender);\\n    }\\n\\n    // give money to believers and owner\\n    function gettingPaid(uint256 _amount) public payable {\\n        if (_amount < 1e14 || msg.value < _amount) {\\n            // 1,00,000,000,000,000 = 1e14 = 1 * 10 ** 14 =  0.0001 ETH\\n            revert SEND_MORE_FUNDS();\\n        }\\n        projectCount++;\\n        // sending money to believers\\n        uint256 believersAmount = (msg.value * percentage) / 100;\\n        if (believers.length >= 1) {\\n            for (uint256 i = 0; i < believers.length; i++) {\\n                (bool success, ) = believers[i].call{\\n                    value: believersAmount / believers.length\\n                }(\\\"\\\");\\n                // require(success, \\\"Transfer failed\\\");\\n                if (!success) {\\n                    revert TRANSFER_FAILED();\\n                }\\n            }\\n        }\\n        // sending money to contract owner\\n        (bool success1, ) = owner.call{value: msg.value - believersAmount}(\\\"\\\");\\n        if (!success1) {\\n            revert TRANSFER_FAILED();\\n        }\\n    }\\n\\n    // function to free owner from paying cut to bieleivers\\n    function freeOwner() public {\\n        if (msg.sender != owner) {\\n            revert ONLY_ONWER_CAN_CALL_FUNCTION();\\n        }\\n        if (projectCount < gigCount) {\\n            revert JOB_NOT_DONE();\\n        }\\n\\n        // send stake money back to believers\\n        if (believers.length >= 1) {\\n            for (uint256 i = 0; i < believers.length; i++) {\\n                (bool success, ) = believers[i].call{\\n                    value: 1e17 / believers.length\\n                }(\\\"\\\"); // 0.1 Ether\\n                if (!success) {\\n                    revert TRANSFER_FAILED();\\n                }\\n            }\\n        }\\n\\n        // empty the array\\n        delete believers;\\n    }\\n\\n    // function to get money to platform if the owner cannot able to perform and get gis and complete them\\n    function platformGettingPaid() public {\\n        if (projectCount > gigCount) {\\n            revert JOB_DONE();\\n        }\\n        // testing\\n        if (block.timestamp < contractCreationTime + 10 minutes) {\\n            revert STILL_HAVE_TIME();\\n        }\\n        // production\\n        // if(block.timestamp < contractCreationTime + 12 weeks){\\n        //     revert STILL_HAVE_TIME();\\n        // }\\n        (bool success1, ) = platformAddress.call{value: address(this).balance}(\\n            \\\"\\\"\\n        );\\n        if (!success1) {\\n            revert TRANSFER_FAILED();\\n        }\\n    }\\n\\n    // get the balance\\n    function getContractBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    // get the length of array\\n    function noOfBelievers() public view returns (uint256) {\\n        return believers.length;\\n    }\\n\\n    // get the balance of owner\\n    function getOwnerBalance() public view returns (uint256) {\\n        return owner.balance;\\n    }\\n\\n    // get the balance of 1st beliver\\n    function getBeliverBalance() public view returns (uint256) {\\n        return believers[0].balance;\\n    }\\n\\n    // Function to receive Ether. msg.data must be empty\\n    receive() external payable {}\\n\\n    // Fallback function is called when msg.data is not empty\\n    fallback() external payable {}\\n}\\n\",\"keccak256\":\"0xc3083fc725991cb70df923de18c25d8e2f8d6fda0ac5e36628eef089adb369ce\",\"license\":\"MIT\"},\"contracts/TrustFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n// Contract Address: 0x8Af2FB1384DD075898341980Fc3Ba3e1b7bF9181\\n\\npragma solidity ^0.8.14;\\n\\nimport \\\"./Trust.sol\\\";\\n\\ncontract TrustFactory {\\n    // factory contract onwer\\n    address private immutable trustFactoryOwner;\\n\\n    // struct to store all the data of trust and trust factory contract\\n    struct trustFactoryStruct {\\n        uint256 trustIndex;\\n        uint256 percentage;\\n        uint256 gigCount;\\n        address trustContractAddress;\\n        address owner;\\n        address platformAddress;\\n    }\\n\\n    // searching the struct data of trust and trust factory using owner/junior address\\n    mapping(address => trustFactoryStruct) public allTrustContracts;\\n\\n    // owner address, onwer address will be used to search the user profile.\\n    mapping(address => address) public searchByAddress;\\n\\n    // number of TrustContracts created\\n    uint256 public numOfTrustContracts;\\n\\n    constructor(address _trustFactoryOwner) {\\n        trustFactoryOwner = _trustFactoryOwner;\\n    }\\n\\n    function createTrustContract(uint256 _percentage, uint256 _gigCount)\\n        public\\n    {\\n        // Create a new trust contract\\n        Trust trust = new Trust(\\n            _percentage,\\n            msg.sender,\\n            _gigCount,\\n            address(this)\\n        );\\n\\n        // Increment the number of Trust contracts\\n        numOfTrustContracts++;\\n\\n        // Add the new trust contract to the mapping\\n        allTrustContracts[msg.sender] = (\\n            trustFactoryStruct(\\n                numOfTrustContracts,\\n                _percentage,\\n                _gigCount,\\n                address(trust),\\n                msg.sender,\\n                address(this)\\n            )\\n        );\\n\\n        // search the profile by using owner address\\n        searchByAddress[msg.sender] = address(trust);\\n    }\\n\\n    // get the balance of the contract\\n    function getContractBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    // get the address of the contract\\n    function getAddressOfContract() public view returns (address) {\\n        return address(this);\\n    }\\n\\n    // get the address of trustFactory contract owner\\n    function getAddressOfTrustFactoryOnwer() public view returns (address) {\\n        return trustFactoryOwner;\\n    }\\n\\n    // Function to receive Ether. msg.data must be empty\\n    receive() external payable {}\\n\\n    // Fallback function is called when msg.data is not empty\\n    fallback() external payable {}\\n\\n    // function to withdraw the fund from contract factory\\n    function withdraw(uint256 amount) external payable {\\n        if (msg.sender != trustFactoryOwner) {\\n            revert ONLY_ONWER_CAN_CALL_FUNCTION();\\n        }\\n        // sending money to contract owner\\n        (bool success, ) = trustFactoryOwner.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert TRANSFER_FAILED();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6b0e00d1f474112a25fe422da21561c4ac6baaa4d320865e925fea818c55dbf0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051611d3b380380611d3b833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b608051611c16610125600039600081816104b9015281816104df01526105670152611c166000f3fe6080604052600436106200008b5760003560e01c806360abcf64116200005557806360abcf6414620001575780636f9fb98a146200018757806395d83e3e14620001b7578063cca3a8c814620002005762000093565b80632082feda146200009557806329886c8714620000c35780632e1a7d4d14620000f35780634713078d14620001135762000093565b366200009357005b005b348015620000a257600080fd5b50620000c16004803603810190620000bb919062000762565b62000230565b005b348015620000d057600080fd5b50620000db620004b5565b604051620000ea9190620007ee565b60405180910390f35b6200011160048036038101906200010b91906200080b565b620004dd565b005b3480156200012057600080fd5b506200013f60048036038101906200013991906200086e565b6200062f565b6040516200014e9190620007ee565b60405180910390f35b3480156200016457600080fd5b506200016f62000662565b6040516200017e9190620008b1565b60405180910390f35b3480156200019457600080fd5b506200019f62000668565b604051620001ae9190620008b1565b60405180910390f35b348015620001c457600080fd5b50620001e36004803603810190620001dd91906200086e565b62000670565b604051620001f796959493929190620008ce565b60405180910390f35b3480156200020d57600080fd5b50620002186200070c565b604051620002279190620007ee565b60405180910390f35b600082338330604051620002449062000714565b6200025394939291906200093b565b604051809103906000f08015801562000270573d6000803e3d6000fd5b509050600260008154809291906200028890620009b7565b91905055506040518060c0016040528060025481526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000563576040517ff065eb4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682604051620005ab9062000a39565b60006040518083038185875af1925050503d8060008114620005ea576040519150601f19603f3d011682016040523d82523d6000602084013e620005ef565b606091505b50509050806200062b576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600047905090565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b600030905090565b6111908062000a5183390190565b600080fd5b6000819050919050565b6200073c8162000727565b81146200074857600080fd5b50565b6000813590506200075c8162000731565b92915050565b600080604083850312156200077c576200077b62000722565b5b60006200078c858286016200074b565b92505060206200079f858286016200074b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007d682620007a9565b9050919050565b620007e881620007c9565b82525050565b6000602082019050620008056000830184620007dd565b92915050565b60006020828403121562000824576200082362000722565b5b600062000834848285016200074b565b91505092915050565b6200084881620007c9565b81146200085457600080fd5b50565b60008135905062000868816200083d565b92915050565b60006020828403121562000887576200088662000722565b5b6000620008978482850162000857565b91505092915050565b620008ab8162000727565b82525050565b6000602082019050620008c86000830184620008a0565b92915050565b600060c082019050620008e56000830189620008a0565b620008f46020830188620008a0565b620009036040830187620008a0565b620009126060830186620007dd565b620009216080830185620007dd565b6200093060a0830184620007dd565b979650505050505050565b6000608082019050620009526000830187620008a0565b620009616020830186620007dd565b620009706040830185620008a0565b6200097f6060830184620007dd565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009c48262000727565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620009f957620009f862000988565b5b600182019050919050565b600081905092915050565b50565b600062000a2160008362000a04565b915062000a2e8262000a0f565b600082019050919050565b600062000a468262000a12565b915081905091905056fe60e06040523480156200001157600080fd5b506040516200119038038062001190833981810160405281019062000037919062000172565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508360a081815250508160c0818152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260038190555050505050620001e4565b600080fd5b6000819050919050565b620000e781620000d2565b8114620000f357600080fd5b50565b6000815190506200010781620000dc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013a826200010d565b9050919050565b6200014c816200012d565b81146200015857600080fd5b50565b6000815190506200016c8162000141565b92915050565b600080600080608085870312156200018f576200018e620000cd565b5b60006200019f87828801620000f6565b9450506020620001b2878288016200015b565b9350506040620001c587828801620000f6565b9250506060620001d8878288016200015b565b91505092959194509250565b60805160a05160c051610f526200023e60003960008181610609015281816107fe01526109f00152600081816103db01526107ae015260008181610538015281816106350152818161072d015261096b0152610f526000f3fe6080604052600436106100ec5760003560e01c80637b95a23b1161008a578063cea3e53011610059578063cea3e530146102b0578063dbe55e56146102db578063dc58f6d714610306578063f730ab0f1461031d576100f3565b80637b95a23b146102255780638da5cb5b1461022f578063ac4f0e6b1461025a578063c78ad77f14610285576100f3565b806336fbad26116100c657806336fbad2614610179578063590791f2146101a4578063674049e3146101cf5780636f9fb98a146101fa576100f3565b80630664200e146100f5578063069658f4146101325780633689e9161461014e576100f3565b366100f357005b005b34801561010157600080fd5b5061011c60048036038101906101179190610bfd565b610334565b6040516101299190610c6b565b60405180910390f35b61014c60048036038101906101479190610bfd565b610373565b005b34801561015a57600080fd5b50610163610607565b6040516101709190610c95565b60405180910390f35b34801561018557600080fd5b5061018e61062b565b60405161019b9190610c95565b60405180910390f35b3480156101b057600080fd5b506101b9610631565b6040516101c69190610c95565b60405180910390f35b3480156101db57600080fd5b506101e4610670565b6040516101f19190610c95565b60405180910390f35b34801561020657600080fd5b5061020f61067c565b60405161021c9190610c95565b60405180910390f35b61022d610684565b005b34801561023b57600080fd5b5061024461072b565b6040516102519190610c6b565b60405180910390f35b34801561026657600080fd5b5061026f61074f565b60405161027c9190610c95565b60405180910390f35b34801561029157600080fd5b5061029a6107ac565b6040516102a79190610c95565b60405180910390f35b3480156102bc57600080fd5b506102c56107d0565b6040516102d29190610c95565b60405180910390f35b3480156102e757600080fd5b506102f06107d6565b6040516102fd9190610cd1565b60405180910390f35b34801561031257600080fd5b5061031b6107fc565b005b34801561032957600080fd5b50610332610969565b005b6000818154811061034457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b655af3107a400081108061038657508034105b156103bd576040517ffd3a0ec200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008154809291906103d090610d1b565b9190505550600060647f0000000000000000000000000000000000000000000000000000000000000000346104059190610d63565b61040f9190610dec565b90506001600080549050106105345760005b60008054905081101561053257600080828154811061044357610442610e1d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600080549050846104959190610dec565b6040516104a190610e7d565b60006040518083038185875af1925050503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b505090508061051e576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50808061052a90610d1b565b915050610421565b505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682346105799190610e92565b60405161058590610e7d565b60006040518083038185875af1925050503d80600081146105c2576040519150601f19603f3d011682016040523d82523d6000602084013e6105c7565b606091505b5050905080610602576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008080549050905090565b600047905090565b67016345785d8a00003410156106c6576040517ffd3a0ec200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008154811061076557610764610e1d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000006001541115610858576040517fc328c4e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102586003546108689190610ec6565b4210156108a1576040517f7496b4c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516108e990610e7d565b60006040518083038185875af1925050503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b5050905080610966576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ee576040517ff065eb4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001541015610a4a576040517fe3cdae1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008054905010610b755760005b600080549050811015610b73576000808281548110610a7c57610a7b610e1d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054905067016345785d8a0000610ad69190610dec565b604051610ae290610e7d565b60006040518083038185875af1925050503d8060008114610b1f576040519150601f19603f3d011682016040523d82523d6000602084013e610b24565b606091505b5050905080610b5f576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080610b6b90610d1b565b915050610a5a565b505b600080610b829190610b84565b565b5080546000825590600052602060002090810190610ba29190610ba5565b50565b5b80821115610bbe576000816000905550600101610ba6565b5090565b600080fd5b6000819050919050565b610bda81610bc7565b8114610be557600080fd5b50565b600081359050610bf781610bd1565b92915050565b600060208284031215610c1357610c12610bc2565b5b6000610c2184828501610be8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c5582610c2a565b9050919050565b610c6581610c4a565b82525050565b6000602082019050610c806000830184610c5c565b92915050565b610c8f81610bc7565b82525050565b6000602082019050610caa6000830184610c86565b92915050565b6000610cbb82610c2a565b9050919050565b610ccb81610cb0565b82525050565b6000602082019050610ce66000830184610cc2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2682610bc7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d5857610d57610cec565b5b600182019050919050565b6000610d6e82610bc7565b9150610d7983610bc7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610db257610db1610cec565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df782610bc7565b9150610e0283610bc7565b925082610e1257610e11610dbd565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b6000610e67600083610e4c565b9150610e7282610e57565b600082019050919050565b6000610e8882610e5a565b9150819050919050565b6000610e9d82610bc7565b9150610ea883610bc7565b925082821015610ebb57610eba610cec565b5b828203905092915050565b6000610ed182610bc7565b9150610edc83610bc7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f1157610f10610cec565b5b82820190509291505056fea2646970667358221220a7ffc5b8dea30b17adb9c7bb24a1dd2f877c83d64dac827733e6b672887f72f264736f6c634300080e0033a2646970667358221220bc1bf89147f31f9c1e5267045aeb101bd8cd4bad3f7a6a30cc265b3f96a7c97364736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106200008b5760003560e01c806360abcf64116200005557806360abcf6414620001575780636f9fb98a146200018757806395d83e3e14620001b7578063cca3a8c814620002005762000093565b80632082feda146200009557806329886c8714620000c35780632e1a7d4d14620000f35780634713078d14620001135762000093565b366200009357005b005b348015620000a257600080fd5b50620000c16004803603810190620000bb919062000762565b62000230565b005b348015620000d057600080fd5b50620000db620004b5565b604051620000ea9190620007ee565b60405180910390f35b6200011160048036038101906200010b91906200080b565b620004dd565b005b3480156200012057600080fd5b506200013f60048036038101906200013991906200086e565b6200062f565b6040516200014e9190620007ee565b60405180910390f35b3480156200016457600080fd5b506200016f62000662565b6040516200017e9190620008b1565b60405180910390f35b3480156200019457600080fd5b506200019f62000668565b604051620001ae9190620008b1565b60405180910390f35b348015620001c457600080fd5b50620001e36004803603810190620001dd91906200086e565b62000670565b604051620001f796959493929190620008ce565b60405180910390f35b3480156200020d57600080fd5b50620002186200070c565b604051620002279190620007ee565b60405180910390f35b600082338330604051620002449062000714565b6200025394939291906200093b565b604051809103906000f08015801562000270573d6000803e3d6000fd5b509050600260008154809291906200028890620009b7565b91905055506040518060c0016040528060025481526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000563576040517ff065eb4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682604051620005ab9062000a39565b60006040518083038185875af1925050503d8060008114620005ea576040519150601f19603f3d011682016040523d82523d6000602084013e620005ef565b606091505b50509050806200062b576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600047905090565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b600030905090565b6111908062000a5183390190565b600080fd5b6000819050919050565b6200073c8162000727565b81146200074857600080fd5b50565b6000813590506200075c8162000731565b92915050565b600080604083850312156200077c576200077b62000722565b5b60006200078c858286016200074b565b92505060206200079f858286016200074b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007d682620007a9565b9050919050565b620007e881620007c9565b82525050565b6000602082019050620008056000830184620007dd565b92915050565b60006020828403121562000824576200082362000722565b5b600062000834848285016200074b565b91505092915050565b6200084881620007c9565b81146200085457600080fd5b50565b60008135905062000868816200083d565b92915050565b60006020828403121562000887576200088662000722565b5b6000620008978482850162000857565b91505092915050565b620008ab8162000727565b82525050565b6000602082019050620008c86000830184620008a0565b92915050565b600060c082019050620008e56000830189620008a0565b620008f46020830188620008a0565b620009036040830187620008a0565b620009126060830186620007dd565b620009216080830185620007dd565b6200093060a0830184620007dd565b979650505050505050565b6000608082019050620009526000830187620008a0565b620009616020830186620007dd565b620009706040830185620008a0565b6200097f6060830184620007dd565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009c48262000727565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620009f957620009f862000988565b5b600182019050919050565b600081905092915050565b50565b600062000a2160008362000a04565b915062000a2e8262000a0f565b600082019050919050565b600062000a468262000a12565b915081905091905056fe60e06040523480156200001157600080fd5b506040516200119038038062001190833981810160405281019062000037919062000172565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508360a081815250508160c0818152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260038190555050505050620001e4565b600080fd5b6000819050919050565b620000e781620000d2565b8114620000f357600080fd5b50565b6000815190506200010781620000dc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013a826200010d565b9050919050565b6200014c816200012d565b81146200015857600080fd5b50565b6000815190506200016c8162000141565b92915050565b600080600080608085870312156200018f576200018e620000cd565b5b60006200019f87828801620000f6565b9450506020620001b2878288016200015b565b9350506040620001c587828801620000f6565b9250506060620001d8878288016200015b565b91505092959194509250565b60805160a05160c051610f526200023e60003960008181610609015281816107fe01526109f00152600081816103db01526107ae015260008181610538015281816106350152818161072d015261096b0152610f526000f3fe6080604052600436106100ec5760003560e01c80637b95a23b1161008a578063cea3e53011610059578063cea3e530146102b0578063dbe55e56146102db578063dc58f6d714610306578063f730ab0f1461031d576100f3565b80637b95a23b146102255780638da5cb5b1461022f578063ac4f0e6b1461025a578063c78ad77f14610285576100f3565b806336fbad26116100c657806336fbad2614610179578063590791f2146101a4578063674049e3146101cf5780636f9fb98a146101fa576100f3565b80630664200e146100f5578063069658f4146101325780633689e9161461014e576100f3565b366100f357005b005b34801561010157600080fd5b5061011c60048036038101906101179190610bfd565b610334565b6040516101299190610c6b565b60405180910390f35b61014c60048036038101906101479190610bfd565b610373565b005b34801561015a57600080fd5b50610163610607565b6040516101709190610c95565b60405180910390f35b34801561018557600080fd5b5061018e61062b565b60405161019b9190610c95565b60405180910390f35b3480156101b057600080fd5b506101b9610631565b6040516101c69190610c95565b60405180910390f35b3480156101db57600080fd5b506101e4610670565b6040516101f19190610c95565b60405180910390f35b34801561020657600080fd5b5061020f61067c565b60405161021c9190610c95565b60405180910390f35b61022d610684565b005b34801561023b57600080fd5b5061024461072b565b6040516102519190610c6b565b60405180910390f35b34801561026657600080fd5b5061026f61074f565b60405161027c9190610c95565b60405180910390f35b34801561029157600080fd5b5061029a6107ac565b6040516102a79190610c95565b60405180910390f35b3480156102bc57600080fd5b506102c56107d0565b6040516102d29190610c95565b60405180910390f35b3480156102e757600080fd5b506102f06107d6565b6040516102fd9190610cd1565b60405180910390f35b34801561031257600080fd5b5061031b6107fc565b005b34801561032957600080fd5b50610332610969565b005b6000818154811061034457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b655af3107a400081108061038657508034105b156103bd576040517ffd3a0ec200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008154809291906103d090610d1b565b9190505550600060647f0000000000000000000000000000000000000000000000000000000000000000346104059190610d63565b61040f9190610dec565b90506001600080549050106105345760005b60008054905081101561053257600080828154811061044357610442610e1d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600080549050846104959190610dec565b6040516104a190610e7d565b60006040518083038185875af1925050503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b505090508061051e576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50808061052a90610d1b565b915050610421565b505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682346105799190610e92565b60405161058590610e7d565b60006040518083038185875af1925050503d80600081146105c2576040519150601f19603f3d011682016040523d82523d6000602084013e6105c7565b606091505b5050905080610602576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008080549050905090565b600047905090565b67016345785d8a00003410156106c6576040517ffd3a0ec200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008154811061076557610764610e1d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000006001541115610858576040517fc328c4e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102586003546108689190610ec6565b4210156108a1576040517f7496b4c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516108e990610e7d565b60006040518083038185875af1925050503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b5050905080610966576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ee576040517ff065eb4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001541015610a4a576040517fe3cdae1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008054905010610b755760005b600080549050811015610b73576000808281548110610a7c57610a7b610e1d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054905067016345785d8a0000610ad69190610dec565b604051610ae290610e7d565b60006040518083038185875af1925050503d8060008114610b1f576040519150601f19603f3d011682016040523d82523d6000602084013e610b24565b606091505b5050905080610b5f576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080610b6b90610d1b565b915050610a5a565b505b600080610b829190610b84565b565b5080546000825590600052602060002090810190610ba29190610ba5565b50565b5b80821115610bbe576000816000905550600101610ba6565b5090565b600080fd5b6000819050919050565b610bda81610bc7565b8114610be557600080fd5b50565b600081359050610bf781610bd1565b92915050565b600060208284031215610c1357610c12610bc2565b5b6000610c2184828501610be8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c5582610c2a565b9050919050565b610c6581610c4a565b82525050565b6000602082019050610c806000830184610c5c565b92915050565b610c8f81610bc7565b82525050565b6000602082019050610caa6000830184610c86565b92915050565b6000610cbb82610c2a565b9050919050565b610ccb81610cb0565b82525050565b6000602082019050610ce66000830184610cc2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2682610bc7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d5857610d57610cec565b5b600182019050919050565b6000610d6e82610bc7565b9150610d7983610bc7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610db257610db1610cec565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df782610bc7565b9150610e0283610bc7565b925082610e1257610e11610dbd565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b6000610e67600083610e4c565b9150610e7282610e57565b600082019050919050565b6000610e8882610e5a565b9150819050919050565b6000610e9d82610bc7565b9150610ea883610bc7565b925082821015610ebb57610eba610cec565b5b828203905092915050565b6000610ed182610bc7565b9150610edc83610bc7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f1157610f10610cec565b5b82820190509291505056fea2646970667358221220a7ffc5b8dea30b17adb9c7bb24a1dd2f877c83d64dac827733e6b672887f72f264736f6c634300080e0033a2646970667358221220bc1bf89147f31f9c1e5267045aeb101bd8cd4bad3f7a6a30cc265b3f96a7c97364736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 358,
        "contract": "contracts/TrustFactory.sol:TrustFactory",
        "label": "allTrustContracts",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(trustFactoryStruct)353_storage)"
      },
      {
        "astId": 362,
        "contract": "contracts/TrustFactory.sol:TrustFactory",
        "label": "searchByAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 364,
        "contract": "contracts/TrustFactory.sol:TrustFactory",
        "label": "numOfTrustContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_struct(trustFactoryStruct)353_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct TrustFactory.trustFactoryStruct)",
        "numberOfBytes": "32",
        "value": "t_struct(trustFactoryStruct)353_storage"
      },
      "t_struct(trustFactoryStruct)353_storage": {
        "encoding": "inplace",
        "label": "struct TrustFactory.trustFactoryStruct",
        "members": [
          {
            "astId": 342,
            "contract": "contracts/TrustFactory.sol:TrustFactory",
            "label": "trustIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 344,
            "contract": "contracts/TrustFactory.sol:TrustFactory",
            "label": "percentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 346,
            "contract": "contracts/TrustFactory.sol:TrustFactory",
            "label": "gigCount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 348,
            "contract": "contracts/TrustFactory.sol:TrustFactory",
            "label": "trustContractAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 350,
            "contract": "contracts/TrustFactory.sol:TrustFactory",
            "label": "owner",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 352,
            "contract": "contracts/TrustFactory.sol:TrustFactory",
            "label": "platformAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}